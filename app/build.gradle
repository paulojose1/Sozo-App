apply plugin: 'com.android.application'

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.sozoapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    androidTestImplementation 'androidx.test:runner:1.2.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'

    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
    //libraries

    // Support multidex
    implementation 'com.android.support:multidex:1.0.3'
    // Firebase messaging
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    // Firebase database
    implementation 'com.google.firebase:firebase-database:17.0.0'
    // Firebase Storage
    implementation 'com.google.firebase:firebase-storage:17.0.0'
    // Firebase Authentication
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    // Firebase Core
    implementation 'com.google.firebase:firebase-core:16.0.9'
    // Firebase Firestore
    implementation 'com.google.firebase:firebase-firestore:19.0.0'
    // Firebase UI Authentication
    implementation 'com.firebaseui:firebase-ui-auth:4.3.2'
    // Firebase Ui Database
    implementation 'com.firebaseui:firebase-ui-database:4.3.2'


    implementation 'com.karumi:dexter:5.0.0'
    implementation 'com.github.d-max:spots-dialog:1.1@aar'
    // Google's Play service Location
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    // request permission
    implementation 'com.karumi:dexter:5.0.0'
    // ButterKnife Dependency Injection
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // Google Maps Services (needed for directions)
    implementation 'com.google.maps:google-maps-services:0.2.9'
    implementation 'org.slf4j:slf4j-nop:1.7.25'

    // Maps utils (required for custom markers)
    //noinspection GradleDynamicVersion
    implementation 'com.google.maps.android:android-maps-utils:0.5+'


    //Glide library
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'androidx.fragment:fragment:1.0.0'


}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.jakewharton.butterknife'
